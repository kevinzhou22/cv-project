{"version":3,"sources":["components/Editable-Input.js","components/General-Information.js","components/Editable-Textarea.js","components/Work-Experience-Entry.js","components/Work-Experience.js","components/Education-Entry.js","components/Education.js","components/CV-Container.js","App.js","index.js"],"names":["EditableInput","props","state","isEditing","undefined","edit","value","text","handleKeyDown","bind","setEditing","handleChangeInput","e","key","this","inputValue","target","setState","bool","displayedContent","onBlur","onKeyDown","type","onChange","onClick","className","React","Component","GeneralInformation","WorkExperienceEntry","WorkExperience","handleAddEntry","keys","uniqid","workExperienceEntries","map","EducationEntry","Education","educationEntries","CVContainer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3be7f4f.chunk.js","sourcesContent":["import React from 'react';\n\n/* Wrap around inputs or textareas to make them editable\nState is not handled by either Editable or the child\ninput / textarea. */\nclass EditableInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditing: this.props.edit === undefined ? false : this.props.edit,\n      value: props.text,\n    }\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.setEditing = this.setEditing.bind(this)\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n  }\n\n  handleKeyDown(e) {\n    if (e.key === \"Enter\" || e.key === \"Escape\") {\n      this.setEditing(false);\n      return;\n    }\n  }\n\n  handleChangeInput(e) {\n    const inputValue = e.target.value;\n    this.setState({ value: inputValue })\n  }\n\n  setEditing(bool) {\n    this.setState({ isEditing: bool });\n  }\n\n  render() {\n    const value = this.state.value;\n\n    let displayedContent;\n    \n    if (this.state.isEditing) {\n      displayedContent = (\n        <div\n          onBlur={() => this.setEditing(false)}\n          onKeyDown={ (e) => this.handleKeyDown(e)}  \n        >\n          <input type=\"text\" value={value} onChange={this.handleChangeInput}></input>\n        </div>\n      );\n    } else {\n      displayedContent = (\n        <div onClick={() => this.setEditing(true)}>\n          <span>{ value }</span>\n        </div>\n      );\n    }\n\n    return (\n      <div className={`editable-input ${this.props.className ? ` ${this.props.className}` : ''}`}>\n        {displayedContent}\n      </div>\n    );\n  }\n\n}\n\nexport default EditableInput;\n","import React from 'react';\nimport EditableInput from './Editable-Input';\n\nclass GeneralInformation extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n      <div className=\"general-information\">\n        <div className=\"name\">\n         <EditableInput text=\"First Name\" />\n          <EditableInput text=\"Last Name\" />\n        </div>        <div className=\"field address-line-1\">\n          <i className=\"fas fa-map-marker-alt\"></i>\n          <EditableInput text=\"Address Line 1\" />\n        </div>\n        <div className=\"field address-line-2\">\n          <span className=\"spacing\"></span>\n          <EditableInput text=\"Address Line 2\" />\n        </div>\n        <div className=\"field phone\">\n          <i className=\"fas fa-phone\"></i>\n          <EditableInput text=\"Phone Number\" />\n        </div>\n        <div className=\"field email\">\n          <i className=\"fas fa-envelope\"></i>\n          <EditableInput text=\"Email\" />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default GeneralInformation;\n","import React from 'react';\n\n/* Wrap around inputs or textareas to make them editable\nState is not handled by either Editable or the child\ninput / textarea. */\nclass EditableInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditing: this.props.edit === undefined ? false : this.props.edit,\n      value: props.text,\n    }\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.setEditing = this.setEditing.bind(this)\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n  }\n\n  handleKeyDown(e) {\n    if (e.key === \"Escape\") {\n      this.setEditing(false);\n      return;\n    }\n  }\n\n  handleChangeInput(e) {\n    const inputValue = e.target.value;\n    this.setState({ value: inputValue })\n  }\n\n  setEditing(bool) {\n    this.setState({ isEditing: bool });\n  }\n\n  render() {\n    const value = this.state.value;\n\n    let displayedContent;\n    \n    if (this.state.isEditing) {\n      displayedContent = (\n        <div\n          onBlur={() => this.setEditing(false)}\n          onKeyDown={ (e) => this.handleKeyDown(e)}  \n        >\n          <textarea type=\"text\" value={value} onChange={this.handleChangeInput}></textarea>\n        </div>\n      );\n    } else {\n      displayedContent = (\n        <div onClick={() => this.setEditing(true)}>\n          <span>{ value }</span>\n        </div>\n      );\n    }\n\n    return (\n      <div className={`editable-textarea ${this.props.className ? ` ${this.props.className}` : ''}`}>\n        {displayedContent}\n      </div>\n    );\n  }\n\n}\n\nexport default EditableInput;\n","import React from 'react';\nimport EditableInput from './Editable-Input';\nimport EditableTextarea from './Editable-Textarea';\n\nclass WorkExperienceEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render () {\n    const edit = this.props.edit === undefined ? false : this.props.edit;\n\n    return (\n      <div className=\"work-experience-entry\">\n        <div className=\"top-row-container\">\n          <EditableInput edit={edit} className=\"field company\" text=\"Company Name\" />\n          <EditableInput edit={edit} className=\"field date\" text=\"Start Date - End Date\" />\n        </div>\n        <div className=\"second-row-container\">\n          <EditableInput edit={edit} className=\"field position\" text=\"Position\"></EditableInput>\n        </div>\n        <div className=\"third-row-container\">\n          <EditableTextarea edit={edit} className=\"field description\" text=\"Description\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WorkExperienceEntry;\n","import React from 'react';\nimport WorkExperienceEntry from './Work-Experience-Entry';\nimport uniqid from 'uniqid';\n\nclass WorkExperience extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddEntry = this.handleAddEntry.bind(this);\n    this.state = {\n      keys: [],\n    }\n  }\n\n  handleAddEntry() {\n    this.setState((state) => {\n      return ({\n        keys: [...state.keys, uniqid() ]\n      });\n    });\n  }\n\n  render() {\n    const { keys } = this.state;\n    const workExperienceEntries = keys.map((key) => {\n      return (\n        <WorkExperienceEntry key={key} edit={true} />\n      );\n    });\n\n    return (\n      <div className=\"work-experience\">\n        <h3>Work Experience</h3>\n        <div className=\"work-experience-entries-container\">\n          {workExperienceEntries}\n        </div>\n        <div className=\"add-work-experience-container\">\n          <button type=\"button\" className=\"add-work-experience\" onClick={this.handleAddEntry}>+ Work Experience</button>\n        </div>\n      </div>\n\n    );\n  }\n\n}\n\nexport default WorkExperience;\n","import React from 'react';\nimport EditableInput from './Editable-Input';\nimport EditableTextarea from './Editable-Textarea';\n\nclass EducationEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render () {\n    const edit = this.props.edit === undefined ? false : this.props.edit;\n\n    return (\n      <div className=\"education-entry\">\n        <div className=\"top-row-container\">\n          <EditableInput edit={edit} className=\"field school\" text=\"School Name\" />\n          <EditableInput edit={edit} className=\"field date\" text=\"Start Date - End Date\" />\n        </div>\n        <div className=\"second-row-container\">\n          <EditableInput edit={edit} className=\"field degree\" text=\"Degree\"></EditableInput>\n        </div>\n        <div className=\"third-row-container\">\n          <EditableTextarea edit={edit} className=\"field description\" text=\"Description\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EducationEntry;\n","import React from 'react';\nimport EducationEntry from './Education-Entry';\nimport uniqid from 'uniqid';\n\nclass Education extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddEntry = this.handleAddEntry.bind(this);\n    this.state = {\n      keys: [],\n    }\n  }\n\n  handleAddEntry() {\n    this.setState((state) => {\n      return ({\n        keys: [...state.keys, uniqid() ]\n      });\n    });\n  }\n\n  render() {\n    const { keys } = this.state;\n    const educationEntries = keys.map((key) => {\n      return (\n        <EducationEntry key={key} edit={true} />\n      );\n    });\n\n    return (\n      <div className=\"education\">\n        <h3>Education</h3>\n        <div className=\"education-entries-container\">\n          {educationEntries}\n        </div>\n        <div className=\"add-education-container\">\n          <button type=\"button\" className=\"add-education\" onClick={this.handleAddEntry}>+ Education</button>\n        </div>\n      </div>\n\n    );\n  }\n\n}\n\nexport default Education;","import React from 'react';\nimport GeneralInformation from './General-Information';\nimport WorkExperience from './Work-Experience';\nimport Education from './Education';\n\nclass CVContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    return (\n      <div className={`cv-container${this.props.className ? ` ${this.props.className}` : ''}`}>\n        <div className=\"left-side\">\n        <GeneralInformation />\n        </div>\n        <div className=\"right-side\">\n          <WorkExperience />\n          <Education />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CVContainer;\n","import React from 'react';\nimport CVContainer from './components/CV-Container';\nimport './reset.css';\nimport './style.css';\nimport '@fortawesome/fontawesome-free/css/solid.min.css';\nimport '@fortawesome/fontawesome-free/css/fontawesome.css';\n\nfunction App() {\n  return (\n   <div className=\"app\">\n     <i className=\"fas fa-briefcase\"></i>\n     <h1>CV Builder</h1>\n    <CVContainer className=''/>\n   </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}